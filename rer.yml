version: "3"
services:
  wordpress: jnthnm/awsprojetwp:1.0
   image: 
   ports: 
     - 80:80
   restart: always
   user: xfs
   command: >
     /bin/sh -c '
     wp core install --path="/var/www/html" --url="http://nomdomaine" --title="Local Wordpress By Docker" --admin_user=adminadmin_password=secret --admin_email=foo@bar.com --allow-root
     
     wp plugin install amazon-s3-and-cloudfront --activate --allow-root
     '
   environment:
     - WORDPRESS_DB_HOST=namehostwp
     - WORDPRESS_DB_USER=nameuserwp
     - WORDPRESS_DB_PASSWORD=passworddbwp
     - WORDPRESS_DB_NAME=namedbwp
   volumes:
     - /mnt/efs/wp_data:/var/www/html











version: "2.3"
services:
  db:
    image: mysql:5.7
    volumes:
      - db_data:/var/lib/mysql
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: somewordpress
      MYSQL_DATABASE: wordpress
      MYSQL_USER: wordpress
      MYSQL_PASSWORD: wordpress

  wordpress:
    depends_on:
      - db
    image: wordpress:latest
    ports:
      - 8000:80
    restart: always
    environment:
      WORDPRESS_DB_HOST: db:3306
      WORDPRESS_DB_NAME: wordpress
      WORDPRESS_DB_USER: wordpress
      WORDPRESS_DB_PASSWORD: wordpress
      WORDPRESS_TABLE_PREFIX: "wp_"
      WORDPRESS_DEBUG: 1
    # vstm: add shared volume
    volumes:
      - wp_data:/var/www/html
      - ./default/:/var/www/html/wp-content/themes/default

  wordpress-cli:
    depends_on:
      - db
      - wordpress
    image: wordpress:cli
    # vstm: This is required to run wordpress-cli with the same
    # user-id as wordpress. This way there are no permission problems
    # when running the cli
    user: xfs
    # vstm: The sleep 10 is required so that the command is run after
    # mysql is initialized. Depending on your machine this might take
    # longer or it can go faster.
    command: >
      /bin/bash -c '
      sleep 10;
      wp core install --path="/var/www/html" --url="http://localhost:8000" --title="Local Wordpress By Docker" --admin_user=admin --admin_password=secret --admin_email=foo@bar.com;
      wp plugin install classic-editor;
      '
    # vstm: add shared volume
    volumes:
      - wp_data:/var/www/html
      - ./default/:/var/www/html/wp-content/themes/default

volumes:
  db_data:
  # vstm: add shared volume
  wp_data:



     # sed -i "86idefine( 'WP_HOME', '${WordpressEC2LoadBalancer.DNSName}' );" wp-config.php
          # sed -i "87idefine( 'WP_SITEURL', '${WordpressEC2LoadBalancer.DNSName}' );" wp-config.php
          docker exec mnt_wordpress_1 curl -O https://raw.githubusercontent.com/wp-cli/builds/gh-pages/phar/wp-cli.phar
          docker exec mnt_wordpress_1 chmod +x wp-cli.phar 
          docker exec mnt_wordpress_1 mv wp-cli.phar /usr/local/bin/wp

  sed -i 's/namehostwp/${RDSInstance.Endpoint.Address}/g' docker-compose.yml
          sed -i 's/nameuserwp/${DBUSER}/g' docker-compose.yml
          sed -i 's/passworddbwp/${DBPASSWORD}/g' docker-compose.yml
          sed -i 's/namedbwp/${DBNAME}/g' docker-compose.yml 
            cd wp_data/
          sed -i "83idefine( 'AS3CF_AWS_ACCESS_KEY_ID', '${S3UserAccessKey}' );" wp-config.php 
          sed -i "84idefine( 'AS3CF_AWS_SECRET_ACCESS_ID', '${S3UserAccessKey.SecretAccessKey}' );" wp-config.php
          sed -i "85idefine( 'AS3CF_AWS_SECRET_ACCESS_ID', '${S3Bucket}' );" wp-config.php 